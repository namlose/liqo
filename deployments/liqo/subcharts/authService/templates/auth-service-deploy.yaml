---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: auth-service-sa
  namespace: {{ .Release.Namespace }}
  labels:
    k8s-app: auth-service
    app: liqo.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: liqo-auth-service
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - clusterrolebindings
    verbs:
      - create
      - delete

  # required to grant permissions
  - apiGroups:
      - discovery.liqo.io
    resources:
      - peeringrequests
    verbs:
      - get
      - create
      - delete
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: liqo-auth-service
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
      - rolebindings
    verbs:
      - create
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: auth-service
  namespace: {{ .Release.Namespace }}
  labels:
    k8s-app: auth-service
    app: liqo.io
subjects:
  - kind: ServiceAccount
    name: auth-service-sa
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: liqo-auth-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: auth-service
  namespace: {{ .Release.Namespace }}
  labels:
    k8s-app: auth-service
    app: liqo.io
subjects:
  - kind: ServiceAccount
    name: auth-service-sa
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: liqo-auth-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: auth-service
    app: liqo.io
  name: auth-service
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      run: auth-service
  template:
    metadata:
      labels:
        run: auth-service
    spec:
      serviceAccountName: auth-service-sa
      initContainers:
        - name: cert-creator
          image: nginx
          volumeMounts:
            - mountPath: '/certs'
              name: certs
          command: [ "/bin/sh" ]
          args: [ "-c", 'openssl req -x509 -subj "/C=IT/ST=Turin/O=Liqo" -nodes -days 365 -newkey rsa:4096 -keyout /certs/key.pem -out /certs/cert.pem' ]
      containers:
        - image: {{ .Values.image.repository }}{{ .Values.global.suffix | default .Values.suffix }}:{{ .Values.global.version | default .Values.version }}
          name: auth-service
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/bin/auth-service"]
          args:
          - "--namespace"
          - "$(POD_NAMESPACE)"
          - "--resyncSeconds"
          - "30"
          - "--listeningPort"
          - "5000"
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{ if .Values.apiServerIp }}
            - name: APISERVER
              value: {{ .Values.apiServerIp }}
            {{ end }}
            {{ if .Values.apiServerPort }}
            - name: APISERVER_PORT
              value: {{ .Values.apiServerPort }}
            {{ end }}
          resources:
            limits:
              cpu: 50m
              memory: 50M
            requests:
              cpu: 50m
              memory: 50M
          volumeMounts:
            - mountPath: '/certs'
              name: certs
      volumes:
        - name: certs
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: auth-service
  name: auth-service
  namespace: {{ .Release.Namespace }}
spec:
  type: NodePort
  selector:
    run: auth-service
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 5000
